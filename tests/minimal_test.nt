say("=== Neutron Language Feature Test ===");
say("");
say("1. Testing Variables and Data Types");
var number = 42;
var text = "Hello, Neutron!";
var boolean = true;
var nilValue = nil;
say("Number: " + number);
say("Text: " + text);
say("Boolean: " + boolean);
say("Nil: " + nilValue);

say("");
say("2. Testing Arithmetic Operations");
var a = 10;
var b = 3;
say("Addition: " + a + " + " + b + " = " + (a + b));
say("Subtraction: " + a + " - " + b + " = " + (a - b));
say("Multiplication: " + a + " * " + b + " = " + (a * b));
say("Division: " + a + " / " + b + " = " + (a / b));
// Note: Modulo operator (%) is not supported in Neutron

say("");
say("3. Testing String Operations");
var str1 = "Hello";
var str2 = "World";
say("Concatenation: " + str1 + " " + str2);
say("Length of '" + str1 + "': " + string_length(str1));

say("");
say("4. Testing Conditional Statements");
var x = 5;
if (x > 0) {
    say("x is positive");
}

var y = 10;
if (x < y) {
    say("x is less than y");
}

say("");
say("5. Testing Loops");
say("While loop:");
var i = 0;
while (i < 3) {
    say("i = " + i);
    i = i + 1;
}

say("");
say("6. Testing Built-in Functions");
say("String representation of number: " + str(number));
say("Integer representation of string: " + int("123"));

say("");
say("7. Testing Classes and Objects");
class Person {
    var name;
    var age;
    
    fun init(name, age) {
        this.name = name;
        this.age = age;
    }
    
    fun introduce() {
        say("Hi, I'm " + this.name + " and I'm " + this.age + " years old.");
    }
}

var person = Person("Alice", 25);
person.introduce();