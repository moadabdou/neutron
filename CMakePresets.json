{
  "version": 6,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 22,
    "patch": 0
  },
  "include": [],
  "configurePresets": [
    {
      "name": "base",
      "hidden": true,
      "binaryDir": "build",
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "${sourceDir}/external/vcpkg/scripts/buildsystems/vcpkg.cmake",
        "CMAKE_CXX_STANDARD": "17",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON"
      }
    },

    {
      "name": "windows-msvc",
      "inherits": "base",
      "description": "Build on Windows using MSVC (Visual Studio generator)",
      "generator": "Visual Studio 17 2022",
      "architecture": {
        "value": "x64"
      },
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },

    {
      "name": "windows-ninja",
      "inherits": "base",
      "description": "Build on Windows using MSVC compiler with Ninja generator",
      "generator": "Ninja",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_C_COMPILER": "cl",
        "CMAKE_CXX_COMPILER": "cl"
      }
    },

    {
      "name": "linux-gcc",
      "inherits": "base",
      "description": "Build on Linux using GCC with Ninja generator",
      "generator": "Ninja",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_C_COMPILER": "gcc",
        "CMAKE_CXX_COMPILER": "g++"
      }
    },

    {
      "name": "linux-clang",
      "inherits": "base",
      "description": "Build on Linux using Clang with Ninja generator",
      "generator": "Ninja",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++"
      }
    },

    {
      "name": "macos-clang",
      "inherits": "base",
      "description": "Build on macOS using Apple Clang with Ninja generator",
      "generator": "Ninja",
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release",
        "CMAKE_C_COMPILER": "clang",
        "CMAKE_CXX_COMPILER": "clang++"
      }
    }
  ],

  "buildPresets": [
    {
      "name": "default",
      "configurePreset": "windows-msvc"
    },
    {
      "name": "build-ninja",
      "configurePreset": "windows-ninja"
    },
    {
      "name": "build-linux",
      "configurePreset": "linux-gcc"
    },
    {
      "name": "build-linux-clang",
      "configurePreset": "linux-clang"
    },
    {
      "name": "build-macos",
      "configurePreset": "macos-clang"
    }
  ]
}
