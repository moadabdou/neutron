// Global test script for Neutron programming language
// This script tests all major features that are known to work

say("=== Neutron Language Feature Test ===");
say("");

// 1. Variables and data types
say("1. Testing Variables and Data Types");
var number = 42;
var text = "Hello, Neutron!";
var boolean = true;
var nilValue = nil;
say("Number: " + number);
say("Text: " + text);
say("Boolean: " + boolean);
say("Nil: " + nilValue);
say("");

// 2. Arithmetic operations
say("2. Testing Arithmetic Operations");
var a = 10;
var b = 3;
say("Addition: " + a + " + " + b + " = " + (a + b));
say("Subtraction: " + a + " - " + b + " = " + (a - b));
say("Multiplication: " + a + " * " + b + " = " + (a * b));
say("Division: " + a + " / " + b + " = " + (a / b));
// Note: Modulo operator (%) is not supported in Neutron
say("");

// 3. String operations
say("3. Testing String Operations");
var str1 = "Hello";
var str2 = "World";
say("Concatenation: " + str1 + " " + str2);
say("Length of '" + str1 + "': " + string_length(str1));
say("");

// 4. Conditional statements
say("4. Testing Conditional Statements");
var x = 5;
if (x > 0) {
    say("x is positive");
}

var y = 10;
if (x < y) {
    say("x is less than y");
}
say("");

// 5. Loops
say("5. Testing Loops");
say("While loop:");
var i = 0;
while (i < 3) {
    say("i = " + i);
    i = i + 1;
}
say("");

// 6. Built-in functions
say("6. Testing Built-in Functions");
say("String representation of number: " + str(number));
say("Integer representation of string: " + int("123"));
say("Character at index 1 of 'Hello': " + string_get_char_at("Hello", 1));
say("");

say("=== End of Neutron Language Feature Test ===");